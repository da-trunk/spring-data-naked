<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.da-trunk.naked</groupId>
	<artifactId>sdn-parent</artifactId>
	<packaging>pom</packaging>
	<version>0.1-SNAPSHOT</version>
	<modules>
		<module>sdn-entities</module>
		<module>sdn-server</module>
		<module>bowman-client</module>
		<module>bowman-parent</module>
		<module>sdn-client</module>
		<module>sdn-test-parent</module>
	</modules>
	<name>Spring Data Naked Objects</name>
	<description>A simple naked objects implementation based on spring-data-rest</description>
	<properties>
		<spring-boot.version>2.7.0</spring-boot.version>
		<liquibase.version>4.12.0</liquibase.version>
		<javassist.version>3.29.0-GA</javassist.version>
		<validation-api.version>2.0.1.Final</validation-api.version>
		<testcontainers.version>1.17.3</testcontainers.version>
		<lombok.version>1.18.22</lombok.version>

		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.github.da-trunk.naked</groupId>
				<artifactId>bowman-client</artifactId>
				<version>0.9.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sdn-server</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sdn-client</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sdn-entities</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sdn-test-entities</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sdn-test-db-common</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>sdn-test-common</artifactId>
				<version>${project.version}</version>
			</dependency>


			<dependency>
				<groupId>com.github.gavlyukovskiy</groupId>
				<artifactId>p6spy-spring-boot-starter</artifactId>
				<version>1.8.0</version>
			</dependency>
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>2.1.1</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>25.1-jre</version>
			</dependency>

			<dependency>
				<groupId>com.github.javafaker</groupId>
				<artifactId>javafaker</artifactId>
				<version>1.0.2</version>
				<exclusions>
					<exclusion>
						<groupId>org.yaml</groupId>
						<artifactId>snakeyaml</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers</artifactId>
				<version>${testcontainers.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.yaml</groupId>
						<artifactId>snakeyaml</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${testcontainers.version}</version>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>oracle-xe</artifactId>
				<version>${testcontainers.version}</version>
			</dependency>
			<!-- Used for javax.annotation.Nonnull -->
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>3.0.2</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>io.github.glytching</groupId>
				<artifactId>junit-extensions</artifactId>
				<version>2.4.0</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-core</artifactId>
				<version>${liquibase.version}</version>
			</dependency>
			<dependency>
				<groupId>org.liquibase.ext</groupId>
				<artifactId>liquibase-hibernate5</artifactId>
				<version>${liquibase.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-entitymanager</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.12.0</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<optional>true</optional>
				<version>${lombok.version}</version>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.10.8</version>
			</dependency>
			<dependency>
				<groupId>org.jooq</groupId>
				<artifactId>jool</artifactId>
				<version>0.9.14</version>
			</dependency>
			<dependency>
				<groupId>com.codepoetics</groupId>
				<artifactId>protonpack</artifactId>
				<version>1.8</version>
			</dependency>
			<dependency>
				<groupId>com.github.scribejava</groupId>
				<artifactId>scribejava-core</artifactId>
				<version>6.0.0</version>
			</dependency>

			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>2.2.2</version>
				<scope>runtime</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<maxmem>2g</maxmem>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0</version>
					<executions>
						<execution>
							<id>enforce-execution-environment</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<phase>prepare-package</phase>
							<configuration>
								<rules>
									<requireJavaVersion>
										<version>[1.8,)</version>
									</requireJavaVersion>
									<requireMavenVersion>
										<version>[3.0.3,4.0)</version>
									</requireMavenVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<localCheckout>true</localCheckout>
						<pushChanges>false</pushChanges>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.1</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
						<execution>
							<id>attach-source</id>
							<phase>compile</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.4.1</version>
					<configuration>
						<doclint>none</doclint>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>

				<plugin>
					<!-- The following plugin generates decompiled Lombok code before static code analysis 
                        tools are run. Without this, maven plugins can fail to find Lombok code at compile time if they are not 
                        building with our provided lombok dependency. -->
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok-maven-plugin</artifactId>
					<version>${lombok.version}.0</version>
					<configuration>
						<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
						<outputDirectory>${project.basedir}/src/main/gen-lombok</outputDirectory>
						<verbose>true</verbose>
						<formatPreferences>
							<generateDelombokComment>skip</generateDelombokComment>
							<javaLangAsFQN>skip</javaLangAsFQN>
							<suppressWarnings>skip</suppressWarnings>
						</formatPreferences>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>delombok</goal>
							</goals>
							<phase>generate-sources</phase>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<localCheckout>true</localCheckout>
					<pushChanges>false</pushChanges>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<distributionManagement>
		<snapshotRepository>
			<id>maven-snapshot</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>maven-central</id>
			<name>Central Repository OSSRH</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
		<!--<repository>
			<id>github</id>
			<name>GitHub Packages</name>
			<url>https://maven.pkg.github.com/da-trunk/spring-data-naked/</url>
		</repository>-->
	</distributionManagement>
	<profiles>
		<profile>
			<id>lombok</id>
			<build>
				<plugins>
					<plugin>
						<!-- The following plugin generates decompiled Lombok code before static code 
                            analysis tools are run. Without this, maven plugins can fail to find Lombok code at compile time if they 
                            are not building with our provided lombok dependency. -->
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok-maven-plugin</artifactId>
						<version>${lombok.version}.0</version>
						<configuration>
							<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
							<outputDirectory>${project.basedir}/src/main/gen-lombok</outputDirectory>
							<verbose>true</verbose>
							<formatPreferences>
								<generateDelombokComment>skip</generateDelombokComment>
								<javaLangAsFQN>skip</javaLangAsFQN>
								<suppressWarnings>skip</suppressWarnings>
							</formatPreferences>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>delombok</goal>
								</goals>
								<phase>generate-sources</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>