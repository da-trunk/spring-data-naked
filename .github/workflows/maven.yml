# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on: 
  workflow_dispatch:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]
   
jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [ '8' ]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'adopt'
        cache: 'maven'
        
    - name: Build with Maven
      #run: mvn -B package --file pom.xml
      run: mvn --batch-mode --update-snapshots install
      
  publish-snapshot:
    needs: build      
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Publish SNAPSHOT to GitHub Packages from ${{ github.workspace }}/settings.xml
      run: mvn --batch-mode --update-snapshots deploy -DskipTests -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  coverage:
#    needs: build
#    runs-on: ubuntu-latest
#    
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up JDK 8
#      uses: actions/setup-java@v3
#      with:
#        java-version: '8'
#        distribution: 'temurin'    
#    - run: mvn -B verify -P coverage
#
#    - uses: codecov/codecov-action@v3.1.0
#      with:
#        file: ./**/target/site/jacoco/jacoco.xml
#        name: codecov
